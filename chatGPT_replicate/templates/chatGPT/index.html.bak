<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chat with GPT-4</title>
    <style>
        body {
            font-family: 'Arial', sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #121212; /* Dark background */
            color: #e0e0e0; /* Lighter text */
            display: flex;
            flex-direction: column;
            height: 100vh;
        }
        header {
            text-align: left;
            margin-bottom: 20px;
            color: #fff; /* White text for contrast */
        }
        .code-block {
            background-color: #2e2e2e; /* Dark background for code */
            color: #f8f8f2; /* Light color for text */
            font-family: 'Courier New', Courier, monospace; /* Monospaced font */
            padding: 10px;
            margin: 5px 0;
            /* overflow-x: auto; Allows horizontal scrolling for longer lines of code */
            border-radius: 4px;
            white-space: pre-wrap; /* Maintains spacing and formatting */
            overflow: hidden;
        }
        #messages {
            flex-grow: 1;
            border: 1px solid #333; /* Darker border */
            background-color: #242424; /* Dark background for chatbox */
            padding: 10px;
            overflow-y: scroll;
            display: flex;
            flex-direction: column;
            margin-bottom: 20px;
            border-radius: 8px;
        }
        .user-message, .bot-message {
            display: block;
            margin: 5px;
            padding: 10px;
            border-radius: 8px;
            color: #fff; /* White text for messages */
            display: inline-block;
            max-width: 80%;
        }
        .user-message {
            background-color: #007bff; /* Keep for contrast */
            align-self: flex-end;
        }
        .bot-message {
            /*background-color: #4caf50; /* Keep for contrast */
            align-self: flex-start;
        }
        .input-area {
            display: flex;
            margin-bottom: 20px;
        }
        #userInput {
            flex-grow: 1;
            padding: 10px;
            margin-right: 8px;
            border: 1px solid #555; /* Darker border for input */
            background-color: #333; /* Darker background for input */
            color: #fff; /* Light text for input */
            border-radius: 8px;
            outline: none;
        }
        button {
            padding: 10px 20px;
            background-color: #007bff; /* Bright color for contrast */
            color: white;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            transition: background-color 0.2s;
        }
        button:hover {
            background-color: #0056b3;
        }

        /* .user-message { 
            background-color: #007bff; 
            padding: 5px; margin-bottom: 
            10px; 
        }
        .gpt-message { 
            background-color: lightgreen;*
            padding: 5px; 
            margin-bottom: 10px; 
        } */
    </style>    
</head>
<body>
    <header>
        <h1>Chat with GPT-4</h1>
    </header>
    <div id="chatbox"></div>

    <!-- <div style="display: flex; height: 100vh;">
        <!-- Sidebar for conversations -->
        <div style="width: 250px; overflow-y: auto; background-color: #f0f0f0;">
            <h2>Conversations</h2>
            <ul style="list-style-type: none; padding: 0;">
                {% for conversation in conversations %}
                <li style="padding: 10px; border-bottom: 1px solid #ccc;">
                    <a href="?conversation_id={{ conversation.id }}" style="text-decoration: none; color: #333;">
                        Conversation at {{ conversation.created_at|date:"SHORT_DATETIME_FORMAT" }}
                    </a>
                </li>
                {% endfor %}
            </ul>
        </div>

        <!-- Main chat area -->
        <div style="flex-grow: 1; overflow-y: auto; padding: 20px;">
            {% if selected_conversation %}
                <h3>Selected Conversation</h3>
                <div id="messages">
                    {% for message in selected_conversation.messages.all %}
                        <div class="{{ message.get_css_class }}">
                            {{ message.text }}
                        </div>
                    {% endfor %}
                </div>
                <!-- Your input area and send button here -->
            {% else %}
                <p>No conversation selected.</p>
            {% endif %}
        </div>
    </div> -->


    <div class="container">
        <!-- Sidebar for conversations -->
        <div class="sidebar">
            <h2>Conversations</h2>
            <ul>
                {% for conversation in conversations %}
                <li>
                    <a href="?conversation_id={{ conversation.id }}">
                        Conversation at {{ conversation.created_at|date:"SHORT_DATETIME_FORMAT" }}
                    </a>
                </li>
                {% endfor %}
            </ul>
        </div>

        <!-- Main chat area -->
        <div class="chat-area">
            {% if selected_conversation %}
                <h3>Selected Conversation</h3>
                <div id="messages">
                    {% for message in selected_conversation.messages.all %}
                        <div class="{{ message.get_css_class }}">
                            {{ message.text }}
                        </div>
                    {% endfor %}
                </div>
                <!-- Your input area and send button here -->
            {% else %}
                <p>No conversation selected.</p>
            {% endif %}
        </div>
    </div>


    <div class="input-area">
        <input type="text" id="userInput" placeholder="Type your message here..." autofocus />
        <input type="hidden" id="conversationId" value="{{ selected_conversation.id }}">
        <button onclick="sendMessage()">Send</button>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', (event) => {
            var input = document.getElementById('userInput');
            input.addEventListener('keypress', function(e) {
                if (e.key === 'Enter') {
                    e.preventDefault(); // Prevent the default action to avoid submitting a form if there is one
                    sendMessage();
                }
            });
        });
    
        function sendMessage() {
            var input = document.getElementById('userInput');
            var conversationId = document.getElementById('conversationId').value; // Get the conversation ID
            var message = input.value.trim();
            if (!message) return;
    
            displayMessage(message, 'user-message');
    
            fetch('/chatGPT/chat/', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Accept': 'application/json'
                },
                body: JSON.stringify({message: message, conversation_id: conversationId})
            })
            .then(response => response.json())
            .then(data => displayMessage(data.reply, 'bot-message'))
            .catch(error => console.error('Error:', error));
    
            input.value = ''; // Clear input after sending
        }

        function displayMessage(content, className) {
            var chatbox = document.getElementById('messages');
            
            // Split the message based on the code block delineated by triple backticks (```)
            const parts = content.split(/```(.*?)```/s);

            parts.forEach((part, index) => {
                if (index % 2 === 0) {
                    // This is either the introductory text or the closing text
                    var textDiv = document.createElement('div');
                    textDiv.textContent = part.trim();
                    textDiv.className = className;
                    chatbox.appendChild(textDiv);
                } else {
                    // This is a code block
                    var pre = document.createElement('pre');
                    var code = document.createElement('code');
                    pre.className = 'code-block';
                    code.textContent = part.trim();
                    pre.appendChild(code);
                    chatbox.appendChild(pre);
                }
            });

            // Scroll to the newest message
            chatbox.scrollTop = chatbox.scrollHeight;
        }


        // function isCode(message) {
        //     // Very basic check - you might want to expand this
        //     return message.startsWith('```') && message.endsWith('```');
        // }
    </script>
    
</body>
</html>
